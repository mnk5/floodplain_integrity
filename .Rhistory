scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 2),
labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 2) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 12)
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 2),
labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 12)
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 2),
labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16)
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16)
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="white"))+
area.barplot
#######################################
# Plot by floodplain area
a1 <- ggplot(all.data, aes(x = FP_Areakm2, y = Floods)) +
geom_point() +
scale_x_continuous() +
scale_y_continuous() +
xlab("") +
ylab("Floods IFI")
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="white"))
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 0.9,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="white"))
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="white"))
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5)) +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="grey93"))
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5), fill = "black") +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="grey93"))
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5), fill = "black") +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="white"))
area.barplot
area.barplot <- ggplot(data = area.df, aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5), fill = "grey27") +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="grey93"))
area.barplot
area.barplot <- ggplot(data = na.omit(area.df), aes(x = breaks, y = value)) +
geom_bar(stat = "identity", width = 1,  position = position_nudge(x = -0.5), fill = "grey27") +
scale_x_continuous(limits = c(0, 20), breaks = seq(0, 20, 4),
labels = c("0", "0.2", "0.4", "0.6", "0.8", "1.0")) +
# labels = c("0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7","0.8", "0.9", "1.0")) +
facet_wrap(~ variable, ncol = 3) +
labs(x = "IFI Value", y = bquote("Total floodplain area, " ~km^2)) +
theme_bw(base_size = 16) +
theme(strip.background =element_rect(fill="grey93"))
area.barplot
# Set working directory
setwd("C:/Users/mnk5/Documents/floodplain_integrity")
# read in files
floodplain <- readOGR(dsn = "RawData/SpatialData", layer = "CO_FP_IFI")
CO.boundary <- readOGR(dsn = "RawData/SpatialData", layer = "CO_StateBoundary_UTM")
CO.HUC12 <- readOGR(dsn = "RawData/SpatialData", layer = "CO_HUC12_IFI")
# NHD v1 segments order 4 and larger in Colorado
CO.rivers <- readOGR(dsn = "RawData/SpatialData", layer = "NHDv1_Order4_CO")
# Clean data
floodplain$HUC12 <- as.character(floodplain$HUC12)
CO.HUC12$HUC12 <- as.character(CO.HUC12$HUC12)
# transform for ggplot
floodplain_tidy <- tidy(floodplain, region = "HUC12")
floodplain.df <- left_join(floodplain_tidy, floodplain@data, by = c("id" = "HUC12"))
HUC12_tidy <- tidy(CO.HUC12, region = "HUC12")
HUC12.df <- left_join(HUC12_tidy, CO.HUC12@data, by = c("id" = "HUC12"))
CO.boundary@data$id <- row.names(CO.boundary@data)
CO.boundary_tidy <- tidy(CO.boundary, region = 'id')
CO.rivers@data$id <- row.names(CO.rivers@data)
CO.rivers_tidy <- tidy(CO.rivers, region = 'id')
# choose bounding box area for zoomed in area
zoomsize <- 46000
xlimits <- c(494000,494000 + zoomsize)
ylimits <- c(4506000, 4506000 - zoomsize)
map2 <- ggplot(data = HUC12.df, aes(x = long, y = lat, group = group)) +
geom_polygon(data = HUC12.df, color = "grey27", size = 0.1, aes(x = long, y = lat, group = group, fill = IFI_geomea)) +
geom_polygon(data = CO.boundary_tidy, aes(x = long, y = lat, group = group),
fill = NA, color = "black", size = 1.5) +
geom_path(data = CO.rivers_tidy, aes(x = long, y = lat, group = group), color = "navy", size = 1) +
coord_equal() +
# coord_fixed(ratio = 1, xlim = xlimits, ylim = ylimits) +
scale_fill_gradientn(colours = c("chocolate3", "wheat1" ,"darkcyan"), breaks = seq(0, 1.0, by = 0.2),
labels = c("0.0","0.2", "0.4", "0.6", "0.8", "1.0"), limits = c(0,1)) +
labs(x = NULL, y = NULL, fill = "IFI") +
theme_minimal(base_size = 12) +
theme(legend.text = element_text(size = 12)) +
theme(axis.text=element_blank()) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
map2
levels(fp.df$variable) = c("Flood Reduction", "Groundwater Storage", "Sediment Regulation",
"Organics/Solutes Regulation", "Habitat Provision", "Overall IFI")
# Mapping zoomed in area IFI by function
fp.df <- melt(floodplain.df, id = 1:9, measure = 13:18)
levels(fp.df$variable) = c("Flood Reduction", "Groundwater Storage", "Sediment Regulation",
"Organics/Solutes Regulation", "Habitat Provision", "Overall IFI")
map7 <- ggplot(data = fp.df, aes(x = long, y = lat, group = group, fill = value)) +
# geom_polygon(data = CO.boundary_tidy, aes(x = long, y = lat, group = group), fill = "grey93") +
# ggmap(get_map(location = bbox(CO.boundary), source = "osm", maptype = "toner", color = "bw", zoom = 1)) +
geom_polygon() +
# coord_equal() +
coord_fixed(ratio = 1, xlim = xlimits, ylim = ylimits) +
facet_wrap(~ variable, ncol = 3) +
scale_fill_gradientn(colours = c("chocolate4", "wheat1" ,"darkcyan"), breaks = seq(0, 1, by = 0.2)) +
labs(x = NULL, y = NULL, fill = "IFI") +
theme_minimal(base_size = 16) +
theme(panel.background = element_rect(fill = "grey93"),
panel.border = element_rect(fill = NA, colour = "black"),
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.key.width = unit(1, "cm"))
# axis.text=element_blank(),
# panel.grid.major = element_blank(), panel.grid.minor = element_blank())
map7
map7 <- ggplot(data = fp.df, aes(x = long, y = lat, group = group, fill = value)) +
# geom_polygon(data = CO.boundary_tidy, aes(x = long, y = lat, group = group), fill = "grey93") +
# ggmap(get_map(location = bbox(CO.boundary), source = "osm", maptype = "toner", color = "bw", zoom = 1)) +
geom_polygon() +
# coord_equal() +
coord_fixed(ratio = 1, xlim = xlimits, ylim = ylimits) +
facet_wrap(~ variable, ncol = 3) +
scale_fill_gradientn(colours = c("chocolate4", "wheat1" ,"darkcyan"), breaks = seq(0, 1, by = 0.2)) +
labs(x = NULL, y = NULL, fill = "IFI") +
theme_minimal(base_size = 16) +
theme(panel.background = element_rect(fill = "grey93"),
panel.border = element_rect(fill = NA, colour = "black"),
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.key.width = unit(1, "cm"),
axis.text=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
map7
map7 <- ggplot(data = fp.df, aes(x = long, y = lat, group = group, fill = value)) +
# geom_polygon(data = CO.boundary_tidy, aes(x = long, y = lat, group = group), fill = "grey93") +
# ggmap(get_map(location = bbox(CO.boundary), source = "osm", maptype = "toner", color = "bw", zoom = 1)) +
geom_polygon() +
# coord_equal() +
coord_fixed(ratio = 1, xlim = xlimits, ylim = ylimits) +
facet_wrap(~ variable, ncol = 3) +
scale_fill_gradientn(colours = c("chocolate3", "wheat1" ,"darkcyan"), breaks = seq(0, 1, by = 0.2)) +
labs(x = NULL, y = NULL, fill = "IFI") +
theme_minimal(base_size = 16) +
theme(panel.background = element_rect(fill = "grey93"),
panel.border = element_rect(fill = NA, colour = "black"),
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.key.width = unit(1, "cm"),
axis.text=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
map7
map7 <- ggplot(data = fp.df, aes(x = long, y = lat, group = group, fill = value)) +
# geom_polygon(data = CO.boundary_tidy, aes(x = long, y = lat, group = group), fill = "grey93") +
# ggmap(get_map(location = bbox(CO.boundary), source = "osm", maptype = "toner", color = "bw", zoom = 1)) +
geom_polygon() +
# coord_equal() +
coord_fixed(ratio = 1, xlim = xlimits, ylim = ylimits) +
facet_wrap(~ variable, ncol = 3) +
scale_fill_gradientn(colours = c("chocolate3", "wheat1" ,"darkcyan"), breaks = seq(0, 1, by = 0.2)) +
labs(x = NULL, y = NULL, fill = "IFI") +
theme_minimal(base_size = 16) +
theme(panel.background = element_rect(fill = "grey85"),
panel.border = element_rect(fill = NA, colour = "black"),
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.key.width = unit(1, "cm"),
axis.text=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
map7
map7 <- ggplot(data = fp.df, aes(x = long, y = lat, group = group, fill = value)) +
# geom_polygon(data = CO.boundary_tidy, aes(x = long, y = lat, group = group), fill = "grey93") +
# ggmap(get_map(location = bbox(CO.boundary), source = "osm", maptype = "toner", color = "bw", zoom = 1)) +
geom_polygon() +
# coord_equal() +
coord_fixed(ratio = 1, xlim = xlimits, ylim = ylimits) +
facet_wrap(~ variable, ncol = 3) +
scale_fill_gradientn(colours = c("chocolate3", "wheat1" ,"darkcyan"), breaks = seq(0, 1, by = 0.2)) +
labs(x = NULL, y = NULL, fill = "IFI") +
theme_minimal(base_size = 16) +
theme(panel.background = element_rect(fill = "grey93"),
panel.border = element_rect(fill = NA, colour = "black"),
legend.position = "bottom",
legend.text = element_text(size = 12),
legend.key.width = unit(1, "cm"),
axis.text=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
map7
library(ggplot2)
library(RColorBrewer)
library(tidyr)
library(grid)
library(gridExtra)
library(emmeans)
library(scales)
library(dplyr)
library(data.table)
library(stringr)
library(psych)
# set path to Git folder
basepath <- "C:/Users/mnk5/Documents/floodplain_integrity"
out.path <- paste(basepath, "/Outputs/", sep="") # for saving outputss
# Load csv file of stressor data with Ecoregion and city as exported from GIS
data.path <- paste(basepath, "/RawData/IFI_Ecoregion_cities.csv", sep="")
all.data <- read.csv(data.path)
colnames(all.data)[which(names(all.data) == "IFI_geomea")] <- "IFI_geomean"
col.names <- colnames(all.data)
# find columns to plot
functions <- c("Floods", "Groundwate", "Sediment", "Organics_S", "Habitat")
func.IFI <- all.data[, functions]
colnames(func.IFI) <- c("Floods", "Groundwater", "Sediment", "Organics_Solutes", "Habitat")
# colnames(func.IFI)[which(names(func.IFI) == "IFI_geomean")] <- "Overall IFI"
######################################
# general statistics about overall IFI
IFI.stats <- describe(all.data$IFI_geomean)
IFI.stats
IFI.func.stats <- apply(func.IFI, 2, function(x) describe(x))
IFI.func.stats
all.data[all.data == -999] <- NA
count.data <- as.data.frame((table(all.data$StrmOrder)))
names(count.data)[1] = 'StrmOrder'
count.data$Freq <- paste(" N =", as.character(count.data$Freq), sep = " ")
SO <- ggplot(all.data, aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)")
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)")
SO
install.packages("ggpubr")
library(ggpubr)
my_comparisons <- list( c("1","2"), c("2","3"), c("3", "4"), c("4","5"), c("5","6"), c("6", "7"))
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons)
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test")
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test", hide.ns = TRUE)
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test")
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test",
label.y = rep(1.25, times = length(my_comparisons)))
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test",
label.y = rep(1.2, times = length(my_comparisons)))
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test",
label.y = seq(1.2, 1.6, 0.4/times = length(my_comparisons)))
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test",
label.y = seq(1.2, 1.6, 0.4/length(my_comparisons)))
SO
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = my_comparisons, label = "p.signif", method = "t.test",
label.y = seq(1.2, 1.4, 0.2/length(my_comparisons)))
SO
SO_comparisons <- list( c("1","2"), c("2","3"), c("3", "4"), c("4","5"), c("5","6"), c("6", "7"))
SO <- ggplot(na.omit(all.data), aes(StrmOrder, IFI_geomean, group = StrmOrder)) +
geom_boxplot(na.rm = TRUE) +
scale_x_discrete(name = "Stream Order", breaks = seq(1:8)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
geom_text(data = count.data, aes(StrmOrder, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "c)") +
stat_compare_means(comparisons = SO_comparisons, label = "p.signif", method = "t.test",
label.y = seq(1.2, 1.4, 0.2/length(my_comparisons)))
SO
#Plot boxplots
PHYS <- ggplot(all.data, aes(PhysioReg, IFI_geomean)) +
geom_boxplot(aes(PhysioReg, IFI_geomean)) +
scale_x_discrete(name = NULL, labels = function(x) str_wrap(x, width = 20)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(), legend.position = "none") +
geom_text(data = count.data.phys, aes(PhysioReg, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "a)") +
stat_compare_means(label = "p.signif")
# Convert to factor and re-order to match geography
all.data$PhysioReg <- factor(all.data$PhysioReg,
levels = c("Intermontane Plateaus", "Rocky Mountain System", "Interior Plains"),
ordered = TRUE)
# get counts for label
count.data.phys <- as.data.frame((table(all.data$PhysioReg)))
names(count.data.phys)[1] = 'PhysioReg'
count.data.phys$Freq <- paste(" N =", as.character(count.data.phys$Freq), sep = " ")
# Test for differences
phys.lm <- lm(IFI_geomean ~ PhysioReg, data = all.data)
phys.pairwise <- lsmeans(phys.lm, pairwise ~ PhysioReg)
method.contrasts <- phys.pairwise$contrasts
method.contrasts
#Plot boxplots
PHYS <- ggplot(all.data, aes(PhysioReg, IFI_geomean)) +
geom_boxplot(aes(PhysioReg, IFI_geomean)) +
scale_x_discrete(name = NULL, labels = function(x) str_wrap(x, width = 20)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(), legend.position = "none") +
geom_text(data = count.data.phys, aes(PhysioReg, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "a)") +
stat_compare_means(label = "p.signif")
PHYS
Phys_comparisons <- list(c("Intermontane Plateaus", "Rocky Mountain System"),
c("Rocky Mountain System", "Interior Plains"),
c("Intermontane Plateaus", "Interior Plains"))
#Plot boxplots
PHYS <- ggplot(all.data, aes(PhysioReg, IFI_geomean)) +
geom_boxplot(aes(PhysioReg, IFI_geomean)) +
scale_x_discrete(name = NULL, labels = function(x) str_wrap(x, width = 20)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(), legend.position = "none") +
geom_text(data = count.data.phys, aes(PhysioReg, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "a)") +
stat_compare_means(comparisons = Phys_comparisons, label = "p.signif")
PHYS
#Plot boxplots
PHYS <- ggplot(all.data, aes(PhysioReg, IFI_geomean)) +
geom_boxplot(aes(PhysioReg, IFI_geomean)) +
scale_x_discrete(name = NULL, labels = function(x) str_wrap(x, width = 20)) +
ylab("Overall IFI") +
theme_linedraw() +
theme(text = element_text(size=16), panel.grid.major.x = element_blank(), panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(), legend.position = "none") +
geom_text(data = count.data.phys, aes(PhysioReg, y = 1.0, label = Freq), nudge_y = 0.05, size = 4) +
labs(tag = "a)") +
stat_compare_means(comparisons = Phys_comparisons, label = "p.signif",
label.y = c(1.2, 1.3, 1.4))
PHYS
